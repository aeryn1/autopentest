from docx import Document
from docx.shared import Pt, Cm, Inches
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from datetime import date
from docx.oxml import OxmlElement
from docx.oxml.ns import nsdecls
from docx.oxml.ns import qn
import subprocess

def add_header(document):
    # Add Header
    header_section = document.sections[0]
    header = header_section.header
    header_paragraph = header.paragraphs[0]
    header_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT

    # Add the logo
    logo_path = "Logo Horizontal.png"
    logo_height = Cm(1.5)
    run = header_paragraph.add_run()
    run.add_picture(logo_path, height=logo_height)

    # Add space after header
    header.add_paragraph()

def create_cover_page(document):
    add_header(document)
    # Add the logo image
    document.add_picture('tri.png', width=Inches(2))
    document.paragraphs[-1].alignment = 1  # Center align the image
   
    # Add spacer
    document.add_paragraph()
    document.paragraphs[-1].add_run().add_break()
    while len(document.paragraphs) % 4 != 0:
        document.add_paragraph()

    title = """Sample Penetration Test Report  
Example Company"""
    document.add_heading(title, level=0).alignment = 1 # Center align the text

    # Add spacer
    document.add_paragraph()
    document.paragraphs[-1].add_run().add_break()
    while len(document.paragraphs) % 14 != 0:
        document.add_paragraph()

    # Add details
    text = f"""
    Company: Customer Name
    Date: {date.today().strftime('%d %B %Y')}
    Version 1.0"""
    document.add_paragraph(text)

def generate_findings(document):

    # Add the introduction section
    document.add_heading("Pendahuluan", level=2)
    intro_paragraph = document.add_paragraph()
    intro_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
    intro_text = "Laporan ini dibuat sebagai hasil dari pengujian penetrasi yang dilakukan untuk mengidentifikasi dan mengekspos kerentanan yang terkait dengan CVE-2021-41282. Dalam laporan ini, kami akan memberikan detail mengenai temuan kerentanan CVE-2021-41282 yang kami identifikasi selama penilaian. Kami akan menjelaskan secara rinci potensi dampak dan risiko yang terkait dengan kerentanan ini, serta memberikan rekomendasi tindakan yang dapat diambil untuk memperbaiki kerentanan tersebut dan meningkatkan keamanan keseluruhan sistem."
    intro_paragraph.add_run(intro_text)

    # Add the executive summary section
    document.add_heading("Ringkasan Eksekutif", level=2)
    summary_paragraph = document.add_paragraph()
    summary_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
    summary_text = "Kami melakukan penetration testing pada tanggal " + date.today().strftime('%d %B %Y') + " dengan menggunakan kredensial atau pengetahuan sebelumnya tentang lingkungan internal. Tujuan pengujian ini adalah untuk mengidentifikasi kelemahan dan mencoba untuk mengeksploitasi kelemahan tersebut. Pengujian dilakukan secara otomatis dengan menggunakan alat yang dikhususkan untuk mencari kerentanan CVE-2021-41282 pada firewall pfSense. CVE-2021-41282 adalah kerentanan remote code execution pada firewall pfSense. Kerentanan ini terjadi karena kegagalan dalam menyaring input pengguna dengan benar sebelum menjalankannya sebagai bagian dari perintah."
    summary_paragraph.add_run(summary_text)

    # Add the methodology section
    document.add_heading("Metodologi", level=2)
    methodology_paragraph = document.add_paragraph()
    methodology_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
    methodology_text = "Pengujian penetrasi mengikuti metodologi komprehensif yang meliputi information gathering, vulnerability scanning, exploitation, dan post-exploitation."
    methodology_paragraph.add_run(methodology_text)

    # Add the findings section
    document.add_heading("Temuan", level=2)
    findings_paragraph = document.add_paragraph()
    findings_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
    findings_text = "Ketika kami melakukan penetration testing, kami menemukan bahwa di jaringan Anda terdapat firewall pfSense, dan firewall tersebut rentan terhadap CVE-2021-41282."
    findings_paragraph.add_run(findings_text)

    # Add the Nmap scan section
    document.add_heading("Pemindaian", level=2)
    with open("scan.txt", "r") as scan_file:
        scan_content = scan_file.read()
    document.add_paragraph(scan_content)

    # Add the Proof of Concept section
    document.add_heading("Eksploitasi", level=2)
    with open("poc.txt", "r") as poc_file:
        poc_content = poc_file.read()
    document.add_paragraph(poc_content)

    # Add the Recommendations section
    document.add_heading("Rekomendasi", level=2)
    recommendations_paragraph = document.add_paragraph()
    recommendations_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
    recommendations_text = "Untuk mengurangi kerentanan tersebut, pengguna sebaiknya melakukan upgrade ke versi terbaru pfSense yang mencakup perbaikan untuk kerentanan tersebut. Selain itu, pengguna juga sebaiknya menerapkan praktik keamanan seperti berikut:"
    recommendations_paragraph.add_run(recommendations_text)


    # Add the recommendations list
    recommendations_list = [
        "Melakukan pembaruan perangkat lunak secara teratur dan memastikan menggunakan versi terbaru pfSense.",
        "Memperkuat kontrol akses dengan menerapkan kebijakan otentikasi yang kuat dan penggunaan kata sandi firewall yang kompleks",
        "Menonaktifkan akses root pada webGUI",
        "Melakukan pemantauan dan pencatatan aktivitas sistem secara teratur.",
        "Melakukan pelatihan kesadaran keamanan bagi anggota staf."
    ]
    for recommendation in recommendations_list:
        document.add_paragraph(recommendation, style='List Bullet')
    
    # Save the document
    document.save("Penetration_Test_Report.docx")

def generate_report():
    # Create a new Word document
    document = Document()

    # Generate the cover page
    create_cover_page(document)

    # Generate the findings page
    generate_findings(document)

    subprocess.run(["unoconv", "-f", "pdf", "Penetration_Test_Report.docx"], stderr=subprocess.DEVNULL)

    print("Penetration test report generated successfully.")

if __name__ == "__main__":
    generate_report()
